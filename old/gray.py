#!/usr/bin/python3

from matplotlib import pyplot
import numpy
from scipy import optimize
from scipy import stats
import seaborn


d1 = [[-0.06983341820033395, -0.6204990179675463],
      [0.9020149850876571, 8.28762639121264],
      [1.7007347057539839, 30.429184549356222],
      [2.9468247617662016, 43.3330908561868],
      [3.9346766567251024, 45.47173928857207],
      [5.887102640576128, 59.59554811958973],
      [7.844620644504257, 71.56543245799082],
      [9.837055357532552, 68.76554884702118],
      [11.539244926165708, 68.73936131519605],
      [23.85902378700807, 77.47290317887538],
      [47.953735360442266, 85.40990761620718],
      [71.77202298683346, 90.27424165272424]]

d2 = [[0.07056084963992326, -0.007274314395857573],
      [0.9107441623626986, 4.5951844038699505],
      [1.8869571542882078, 11.657088819378785],
      [3.018840474285298, 12.87044446060959],
      [3.8473848839746836, 22.396159161998995],
      [5.956208627336874, 30.36371571979342],
      [7.771150069105985, 42.64348585145851],
      [9.754855604859241, 43.53604422783154],
      [11.857859896704731, 53.965228777187754],
      [15.983123590601583, 48.97868625882012],
      [24.080890376082053, 43.62333600058196],
      [48.02429621008219, 55.562668218520415],
      [71.83167236487961, 65.04255473921584]]


N = 40
def nll(loglambda, t, F):
    lambda_ = numpy.exp(loglambda)
    p = 1 - numpy.exp(- lambda_ * t)
    n = numpy.round(N * F)
    return (- numpy.sum(stats.binom.logpmf(n, N, p)))
    
for d in (d1, d2):
    d = numpy.asarray(d)
    d[0] = [0, 0]
    t = d[:, 0]
    F = d[:, 1] / 100
    
    l = pyplot.plot(t, F, linestyle = 'solid')

    res = optimize.minimize(nll, -1, args = (t, F))
    loglambda = res.x
    lambda_ = numpy.exp(res.x)
    F_mod = 1 - numpy.exp(- lambda_ * t)
    pyplot.plot(t, F_mod, color = l[0].get_color(), linestyle = 'dotted')

pyplot.show()
